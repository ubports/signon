<?xml version="1.0" encoding="ISO-8859-1"?>
<testdefinition version="1.0">
  <suite name="libsignon-qt-tests" domain="Accounts and SSO">
    <description>Signon Qt Client Library Tests</description>
    <set name="/usr/bin/libsignon-qt-tests" feature="SSO API">
      <case name="libsignon-qt-tests-queryIdentities" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryIdentities</description>
        <step>/usr/bin/libsignon-qt-tests queryIdentities</step>
      </case>
      <case name="libsignon-qt-tests-queryMethods" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryMethods</description>
        <step>/usr/bin/libsignon-qt-tests queryMethods</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryMechanisms</description>
        <step>/usr/bin/libsignon-qt-tests queryMechanisms</step>
      </case>
      <case name="libsignon-qt-tests-clear" type="Functional" level="Component">
        <description>libsignon-qt-tests-clear</description>
        <step>/usr/bin/libsignon-qt-tests clear</step>
      </case>
      <case name="libsignon-qt-tests-queryAvailableMetods" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryAvailableMetods</description>
        <step>/usr/bin/libsignon-qt-tests queryAvailableMetods</step>
      </case>
      <case name="libsignon-qt-tests-storeCredentials" type="Functional" level="Component">
        <description>libsignon-qt-tests-storeCredentials</description>
        <step>/usr/bin/libsignon-qt-tests storeCredentials</step>
      </case>
      <case name="libsignon-qt-tests-requestCredentialsUpdate" type="Functional" level="Component">
        <description>libsignon-qt-tests-requestCredentialsUpdate</description>
        <step>/usr/bin/libsignon-qt-tests requestCredentialsUpdate</step>
      </case>
      <case name="libsignon-qt-tests-queryInfo" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryInfo</description>
        <step>/usr/bin/libsignon-qt-tests queryInfo</step>
      </case>
      <case name="libsignon-qt-tests-addReference" type="Functional" level="Component">
        <description>libsignon-qt-tests-addReference</description>
        <step>/usr/bin/libsignon-qt-tests addReference</step>
      </case>
      <case name="libsignon-qt-tests-removeReference" type="Functional" level="Component">
        <description>libsignon-qt-tests-removeReference</description>
        <step>/usr/bin/libsignon-qt-tests removeReference</step>
      </case>
      <case name="libsignon-qt-tests-verifyUser" type="Functional" level="Component">
        <description>libsignon-qt-tests-verifyUser</description>
        <step>/usr/bin/libsignon-qt-tests verifyUser</step>
      </case>
      <case name="libsignon-qt-tests-verifySecret" type="Functional" level="Component">
        <description>libsignon-qt-tests-verifySecret</description>
        <step>/usr/bin/libsignon-qt-tests verifySecret</step>
      </case>
      <case name="libsignon-qt-tests-signOut" type="Functional" level="Component">
        <description>libsignon-qt-tests-signOut</description>
        <step>/usr/bin/libsignon-qt-tests signOut</step>
      </case>
      <case name="libsignon-qt-tests-remove" type="Functional" level="Component">
        <description>libsignon-qt-tests-remove</description>
        <step>/usr/bin/libsignon-qt-tests remove</step>
      </case>
      <case name="libsignon-qt-tests-storeCredentialsWithoutAuthMethodsTest" type="Functional" level="Component">
        <description>libsignon-qt-tests-storeCredentialsWithoutAuthMethodsTest</description>
        <step>/usr/bin/libsignon-qt-tests storeCredentialsWithoutAuthMethodsTest</step>
      </case>
      <case name="libsignon-qt-tests-sessionTest" type="Functional" level="Component">
        <description>libsignon-qt-tests-sessionTest</description>
        <step>/usr/bin/libsignon-qt-tests sessionTest</step>
      </case>
      <case name="libsignon-qt-tests-multipleRemove" type="Functional" level="Component">
        <description>libsignon-qt-tests-multipleRemove</description>
        <step>/usr/bin/libsignon-qt-tests multipleRemove</step>
      </case>
      <case name="libsignon-qt-tests-removeStoreRemove" type="Functional" level="Component">
        <description>libsignon-qt-tests-removeStoreRemove</description>
        <step>/usr/bin/libsignon-qt-tests removeStoreRemove</step>
      </case>
      <case name="libsignon-qt-tests-multiThreadTest" type="Functional" level="Component">
        <description>libsignon-qt-tests-multiThreadTest</description>
        <step>/usr/bin/libsignon-qt-tests multiThreadTest</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms_existing_method" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryMechanisms_existing_method</description>
        <step>/usr/bin/libsignon-qt-tests queryMechanisms_existing_method</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms_nonexisting_method" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryMechanisms_nonexisting_method</description>
        <step>/usr/bin/libsignon-qt-tests queryMechanisms_nonexisting_method</step>
      </case>
      <case name="libsignon-qt-tests-queryAuthPluginACL" type="Functional" level="Component">
        <description>libsignon-qt-tests-queryAuthPluginACL</description>
        <step>/usr/bin/libsignon-qt-tests queryAuthPluginACL</step>
      </case>
      <case name="libsignon-qt-tests-process_with_new_identity" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_with_new_identity</description>
        <step>/usr/bin/libsignon-qt-tests process_with_new_identity</step>
      </case>
      <case name="libsignon-qt-tests-process_with_existing_identity" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_with_existing_identity</description>
        <step>/usr/bin/libsignon-qt-tests process_with_existing_identity</step>
      </case>
      <case name="libsignon-qt-tests-process_with_nonexisting_type" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_with_nonexisting_type</description>
        <step>/usr/bin/libsignon-qt-tests process_with_nonexisting_type</step>
      </case>
      <case name="libsignon-qt-tests-process_with_nonexisting_method" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_with_nonexisting_method</description>
        <step>/usr/bin/libsignon-qt-tests process_with_nonexisting_method</step>
      </case>
      <case name="libsignon-qt-tests-process_from_other_process" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_from_other_process</description>
        <step>/usr/bin/libsignon-qt-tests process_from_other_process</step>
      </case>
      <case name="libsignon-qt-tests-process_many_times_after_auth" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_many_times_after_auth</description>
        <step>/usr/bin/libsignon-qt-tests process_many_times_after_auth</step>
      </case>
      <case name="libsignon-qt-tests-process_many_times_before_auth" type="Functional" level="Component">
        <description>libsignon-qt-tests-process_many_times_before_auth</description>
        <step>/usr/bin/libsignon-qt-tests process_many_times_before_auth</step>
      </case>
      <case name="libsignon-qt-tests-cancel_immidiately" type="Functional" level="Component">
        <description>libsignon-qt-tests-cancel_immidiately</description>
        <step>/usr/bin/libsignon-qt-tests cancel_immidiately</step>
      </case>
      <case name="libsignon-qt-tests-cancel_with_delay" type="Functional" level="Component">
        <description>libsignon-qt-tests-cancel_with_delay</description>
        <step>/usr/bin/libsignon-qt-tests cancel_with_delay</step>
      </case>
      <case name="libsignon-qt-tests-cancel_without_process" type="Functional" level="Component">
        <description>libsignon-qt-tests-cancel_without_process</description>
        <step>/usr/bin/libsignon-qt-tests cancel_without_process</step>
      </case>
      <case name="libsignon-qt-tests-handle_destroyed_signal" type="Functional" level="Component">
        <description>libsignon-qt-tests-handle_destroyed_signal</description>
        <step>/usr/bin/libsignon-qt-tests handle_destroyed_signal</step>
      </case>
      <environments>
        <scratchbox>true</scratchbox>
        <hardware>true</hardware>
      </environments>
    </set>
    <set name="/usr/bin/libsignon-qt-untrusted-tests" feature="SSO API">
      <case name="libsignon-qt-tests-queryIdentities" type="Security" level="Component">
        <description>libsignon-qt-tests-queryIdentities</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryIdentities</step>
      </case>
      <case name="libsignon-qt-tests-queryMethods" type="Security" level="Component">
        <description>libsignon-qt-tests-queryMethods</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryMethods</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms" type="Security" level="Component">
        <description>libsignon-qt-tests-queryMechanisms</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryMechanisms</step>
      </case>
      <case name="libsignon-qt-tests-clear" type="Security" level="Component">
        <description>libsignon-qt-tests-clear</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests clear</step>
      </case>
      <case name="libsignon-qt-tests-queryAvailableMetods" type="Security" level="Component">
        <description>libsignon-qt-tests-queryAvailableMetods</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryAvailableMetods</step>
      </case>
      <case name="libsignon-qt-tests-storeCredentials" type="Security" level="Component">
        <description>libsignon-qt-tests-storeCredentials</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests storeCredentials</step>
      </case>
      <case name="libsignon-qt-tests-requestCredentialsUpdate" type="Security" level="Component">
        <description>libsignon-qt-tests-requestCredentialsUpdate</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests requestCredentialsUpdate</step>
      </case>
      <case name="libsignon-qt-tests-queryInfo" type="Security" level="Component">
        <description>libsignon-qt-tests-queryInfo</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryInfo</step>
      </case>
      <case name="libsignon-qt-tests-addReference" type="Security" level="Component">
        <description>libsignon-qt-tests-addReference</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests addReference</step>
      </case>
      <case name="libsignon-qt-tests-removeReference" type="Security" level="Component">
        <description>libsignon-qt-tests-removeReference</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests removeReference</step>
      </case>
      <case name="libsignon-qt-tests-verifyUser" type="Security" level="Component">
        <description>libsignon-qt-tests-verifyUser</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests verifyUser</step>
      </case>
      <case name="libsignon-qt-tests-verifySecret" type="Security" level="Component">
        <description>libsignon-qt-tests-verifySecret</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests verifySecret</step>
      </case>
      <case name="libsignon-qt-tests-signOut" type="Security" level="Component">
        <description>libsignon-qt-tests-signOut</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests signOut</step>
      </case>
      <case name="libsignon-qt-tests-remove" type="Security" level="Component">
        <description>libsignon-qt-tests-remove</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests remove</step>
      </case>
      <case name="libsignon-qt-tests-storeCredentialsWithoutAuthMethodsTest" type="Security" level="Component">
        <description>libsignon-qt-tests-storeCredentialsWithoutAuthMethodsTest</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests storeCredentialsWithoutAuthMethodsTest</step>
      </case>
      <case name="libsignon-qt-tests-sessionTest" type="Security" level="Component">
        <description>libsignon-qt-tests-sessionTest</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests sessionTest</step>
      </case>
      <case name="libsignon-qt-tests-multipleRemove" type="Security" level="Component">
        <description>libsignon-qt-tests-multipleRemove</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests multipleRemove</step>
      </case>
      <case name="libsignon-qt-tests-removeStoreRemove" type="Security" level="Component">
        <description>libsignon-qt-tests-removeStoreRemove</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests removeStoreRemove</step>
      </case>
      <case name="libsignon-qt-tests-multiThreadTest" type="Security" level="Component">
        <description>libsignon-qt-tests-multiThreadTest</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests multiThreadTest</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms_existing_method" type="Security" level="Component">
        <description>libsignon-qt-tests-queryMechanisms_existing_method</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryMechanisms_existing_method</step>
      </case>
      <case name="libsignon-qt-tests-queryMechanisms_nonexisting_method" type="Security" level="Component">
        <description>libsignon-qt-tests-queryMechanisms_nonexisting_method</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryMechanisms_nonexisting_method</step>
      </case>
      <case name="libsignon-qt-tests-queryAuthPluginACL" type="Security" level="Component">
        <description>libsignon-qt-tests-queryAuthPluginACL</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests queryAuthPluginACL</step>
      </case>
      <case name="libsignon-qt-tests-process_with_new_identity" type="Security" level="Component">
        <description>libsignon-qt-tests-process_with_new_identity</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_with_new_identity</step>
      </case>
      <case name="libsignon-qt-tests-process_with_existing_identity" type="Security" level="Component">
        <description>libsignon-qt-tests-process_with_existing_identity</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_with_existing_identity</step>
      </case>
      <case name="libsignon-qt-tests-process_with_nonexisting_type" type="Security" level="Component">
        <description>libsignon-qt-tests-process_with_nonexisting_type</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_with_nonexisting_type</step>
      </case>
      <case name="libsignon-qt-tests-process_with_nonexisting_method" type="Security" level="Component">
        <description>libsignon-qt-tests-process_with_nonexisting_method</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_with_nonexisting_method</step>
      </case>
      <case name="libsignon-qt-tests-process_from_other_process" type="Security" level="Component">
        <description>libsignon-qt-tests-process_from_other_process</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_from_other_process</step>
      </case>
      <case name="libsignon-qt-tests-process_many_times_after_auth" type="Security" level="Component">
        <description>libsignon-qt-tests-process_many_times_after_auth</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_many_times_after_auth</step>
      </case>
      <case name="libsignon-qt-tests-process_many_times_before_auth" type="Security" level="Component">
        <description>libsignon-qt-tests-process_many_times_before_auth</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests process_many_times_before_auth</step>
      </case>
      <case name="libsignon-qt-tests-cancel_immidiately" type="Security" level="Component">
        <description>libsignon-qt-tests-cancel_immidiately</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests cancel_immidiately</step>
      </case>
      <case name="libsignon-qt-tests-cancel_with_delay" type="Security" level="Component">
        <description>libsignon-qt-tests-cancel_with_delay</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests cancel_with_delay</step>
      </case>
      <case name="libsignon-qt-tests-cancel_without_process" type="Security" level="Component">
        <description>libsignon-qt-tests-cancel_without_process</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests cancel_without_process</step>
      </case>
      <case name="libsignon-qt-tests-handle_destroyed_signal" type="Security" level="Component">
        <description>libsignon-qt-tests-handle_destroyed_signal</description>
        <step>/usr/bin/libsignon-qt-untrusted-tests handle_destroyed_signal</step>
      </case>
      <environments>
        <scratchbox>true</scratchbox>
        <hardware>true</hardware>
      </environments>
    </set>
  </suite>
</testdefinition>
